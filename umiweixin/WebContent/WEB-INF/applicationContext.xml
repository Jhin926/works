<?xml version="1.0" encoding="UTF-8"?>
<!--
  - Middle tier application context definition for the image database.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<context:annotation-config/>
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="true">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 定义数据源c3p0 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 --> 
		<property name="initialPoolSize" value="${initialPoolSize}" />
		<!-- 连接池中保留的最小连接数。  -->
		<property name="minPoolSize" value="${minPoolSize}" />
		<!-- 连接池中保留的最大连接数。Default: 15  -->
		<property name="maxPoolSize" value="${maxPoolSize}" />
		<!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0  -->
		<property name="maxIdleTime" value="${maxIdleTime}" />
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3  -->
		<property name="acquireIncrement" value="${acquireIncrement}" />
		<!-- 每60秒检查所有连接池中的空闲连接。Default: 0  -->
		<property name="idleConnectionTestPeriod" value="${idleConnectionTestPeriod}" />
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	
	    <property name="dataSource" ref="dataSource"></property>
	
	    <property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=true
				hiberante.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
			</value>
		</property>
	
	   <property name="mappingResources">
	        <list>
				<value>com/nr/umi/bean/ApiRequest.hbm.xml</value>
				<value>com/nr/umi/bean/BankInfo.hbm.xml</value>
				<value>com/nr/umi/bean/BankLimit.hbm.xml</value>
				<value>com/nr/umi/bean/CashFlow.hbm.xml</value>
				<value>com/nr/umi/bean/CenterProcess.hbm.xml</value>
				<value>com/nr/umi/bean/ExCashFlow.hbm.xml</value>
				<value>com/nr/umi/bean/Experience.hbm.xml</value>
				<value>com/nr/umi/bean/FRUserInfo.hbm.xml</value>
				<value>com/nr/umi/bean/OrderDetail.hbm.xml</value>
				<value>com/nr/umi/bean/Text.hbm.xml</value>
				<value>com/nr/umi/bean/TransferRemark.hbm.xml</value>
				<value>com/nr/umi/bean/UMIUser.hbm.xml</value>
				<value>com/nr/umi/bean/User.hbm.xml</value>
				<value>com/nr/umi/bean/UserAccountInfo.hbm.xml</value>
				<value>com/nr/umi/bean/UserAction.hbm.xml</value>
				<value>com/nr/umi/bean/UserBank.hbm.xml</value>
				<value>com/nr/umi/bean/UserRelation.hbm.xml</value>
				<value>com/nr/umi/bean/UserSession.hbm.xml</value>
				<value>com/nr/umi/bean/UserSummary.hbm.xml</value>
				<value>com/nr/umi/bean/WechatToken.hbm.xml</value>
				<value>com/nr/umi/bean/Yield.hbm.xml</value>
	        </list>
	    </property>
	
	</bean>
	
	
		<!-- 定义事物管理 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	    <property name="sessionFactory">
	        <ref local="sessionFactory"/>
	    </property>
	</bean> 
	
	<!-- 配置事务特性 以save、delete、update -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	        <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	        <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	        <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	        <tx:method name="*" propagation="SUPPORTS"/>
	    </tx:attributes>
	</tx:advice>
	
	
		<!-- 配置那些类的方法进行事务管理 -->
	<aop:config>
	    <aop:pointcut id="myMethod" expression="execution(* com.nr.umi.service.*.*(..))"/>
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="myMethod"/>
	</aop:config>
	
	<bean id="user" class="com.nr.umi.bean.User"></bean>
	<bean id="umiuser" class="com.nr.umi.bean.UMIUser"></bean>
	<bean id="umiService" class="com.nr.umi.service.UmiService"></bean>
	<bean id="umiDao" class="com.nr.umi.dao.UmiDao"></bean>
	<bean id="mainAction" class="com.nr.umi.action.MainAction" scope="prototype"></bean>
	
	<bean id="userAccountInfoDao" class="com.nr.umi.dao.UserAccountInfoDao"></bean>
	<bean id="userAccountInfoService" class="com.nr.umi.service.UserAccountInfoService"></bean>
	
	<bean id="bankCardDao" class="com.nr.umi.dao.BankCardDao"></bean>
	<bean id="BankCardService" class="com.nr.umi.service.BankCardService"></bean>

	<bean id="yktDao" class="com.nr.umi.dao.YktDao"></bean>
	<bean id="yktService" class="com.nr.umi.service.YktService"></bean>
	
	<bean id="weChatDao" class="com.nr.umi.dao.WeChatDao"></bean>
	<bean id="weChatService" class="com.nr.umi.service.WeChatService"></bean>
</beans>

